<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Commander</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha512-MoRNloxbStBcD8z3M/2BmnT+rg4IsMxPkXaGh2zD6LGNNFE80W3onsAhRcMAMrSoyWL9xD7Ert0men7vR8LUZg==" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css" integrity="sha512-1PKOgIY59xJ8Co8+NE6FZ+LOAZKjy+KY8iq0G4B3CyeY6wYHN3yt9PW0XpSriVlkMXe40PTKnXrLnZ9+fkDaog==" crossorigin="anonymous" />
</head>
<body>
    <div class="container">
        <nav class="navbar navbar-light bg-light">
            <a class="navbar-brand" href="#!">Commander</a>
            <form class="form form-inline">
                <div class="input-group mr-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="fas fa-search"></i>
                        </div>
                    </div>
                    <input type="search" class="form-control" placeholder="Command or platform.." required />
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-primary" value="Search" />
                </div>
            </form>
            <button class="btn btn-secondary" data-toggle="modal" data-target="#addCommandModal">
                Add Command
            </button>
        </nav>
        <div class="row p-2">
            <div class="col-12">
                <div class="card mt-2">
                    <div class="card-header">
                        <h4 class="card-title">
                            <button class="btn" data-toggle="collapse" data-target="#allCommands" aria-expanded="false">
                                All
                            </button>
                        </h4>
                    </div>
                    <div id="allCommands" class="collapse">
                        <div class="card-body">
                            <ul id="commandsContainerList">
                                <!--Commands will be rendered here-->
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="card mt-2">
                    <div class="card-header">
                        <h4 class="card-title">
                            <button class="btn" data-toggle="collapse" data-target="#windowsCommands" aria-expanded="false">
                                Windows
                            </button>
                        </h4>
                    </div>
                    <div id="windowsCommands" class="collapse">
                        <div class="card-body">
                            <ul>
                                <li>
                                    dir
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--Add Command Form-->

    <div class="modal" id="addCommandModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        Add new command
                    </h5>
                </div>
                <div class="modal-body">
                    <form class="form">
                        <div class="form-group">
                            <label for="command">
                                Command:
                            </label>
                            <input class="form-control" id="command" type="text" value="" placeholder="ie. dir, touch, add-migration" required />
                        </div>
                        <div class="form-group">
                            <label for="platform">
                                Platform:
                            </label>
                            <input class="form-control" id="platform" type="text" value="" placeholder="ie. Windows, Linux, Ef-Core" required />
                        </div>
                        <div class="form-group">
                            <label for="descirption">
                                Description:
                            </label>
                            <input class="form-control" id="description" type="text" value="" placeholder="Command output" required />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" type="button" data-dismiss="modal">
                        Close
                    </button>
                    <button class="btn btn-info" id="saveCommandButton" type="button" data-dismiss="modal">
                        Save Command
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="deleteCommandModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete this command?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this comamnd?.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js" integrity="sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha512-M5KW3ztuIICmVIhjSqXe01oV2bpe248gOxqmlcYrEzAvws7Pw3z6BK0iGbrwvdrUQUhi3eXgtxp5I8PDo9YfjQ==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/5.4.0/bootbox.min.js"></script>
    <script>
        const saveCommandButton = $("#saveCommandButton");
        saveCommandButton.on("click", saveCommand);


        async function getCommands() {
            const response = await fetch('/api/commands')
                .then(res => res.json())
                .then(res => {
                    return res;
                })
                .catch(err => {
                    console.log(err.response);
                })
            return response;
        }

        function saveCommand(e){
            e.preventDefault();
            saveCommandButton.html(`<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
  <span class="sr-only">Loading...</span>`);
            saveCommandButton.attr("disabled", true);

            let name = $("#command").val();
            let description = $("#description").val();
            let platform = $("#platform").val();

            let data = {
                name,
                description,
                platform
            }
            data = JSON.stringify(data);
            fetch("api/commands",{
                @*url: "/api/commands",*@
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "C-Action-Type": "Create new command"
                },
                body: data
            })
                .then(res => res.json())
                .then(command => {
                    bootbox.alert('Command has been added');
                    // Append new one 
                    let template = `
                            <li id="cmd-${command.id}">
                                <p class="shadow-sm p-2 rounded">
                                    Command: ${command.name} <br>
                                    Description: ${command.description} <br>
                                    Platform: ${command.platform}<br>
                                    <button onclick="confirmDelete(${command.id});" class="btn btn-sm btn-danger mt-2 mr-2" >Delete</button>
                                    <button onclick="editCommand(${command.id});" class="btn btn-sm btn-info mt-2" >Edit</button>
                                </p>                                    
                            </li>`;
                    $("#commandsContainerList").append(template);
                })
                .catch(err => err.response);

            saveCommandButton.html('Save Changes');
            saveCommandButton.attr("disabled", false);

        }

        async function renderAllCommands() {
            const response = await getCommands();
            let template = ``;

            response.forEach(command => {
                template += `
                            <li id="cmd-${command.id}">
                                <p class="shadow-sm p-2 rounded">
                                    Command: ${command.name} <br>
                                    Description: ${command.description} <br>
                                    Platform: ${command.platform}<br>
                                    <button onclick="confirmDelete(${command.id});" class="btn btn-sm btn-danger mt-2 mr-2" >Delete</button>
                                    <button onclick="editCommand(${command.id});" class="btn btn-sm btn-info mt-2" >Edit</button>
                                </p>                                    
                            </li>`;
            });

            $("#commandsContainerList").html(template);
        }


        function confirmDelete(commandId) {

            bootbox.confirm("Are you sure?", (result) => {

                if (!result) {
                    return;
                }
                deleteCommand(commandId);

            })
        }
        async function deleteCommand(commandId) {

               fetch(`api/commands/${commandId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': 'akibrezakhan',
                    }
               })
                .then(res => {
                    if (res.status == 204) {
                        bootbox.alert("Command has been deleted");
                        $(`#cmd-${commandId}`).hide();
                    }
                })
                .catch(err => {
                    console.log(err);
                })
        }

        function editCommand(commandId) {

            
        }

        async function saveEdit(commandId) {
            const response = await fetch(`/api/commands/${commandId}`, {
                method: 'PUT',
                headers: {
                    'Authorization': 'akibrezakhan',
                    'Content-Type': 'application/json'
                }
            })
            response.then(res => res.json())
                .then(res => {
                    if (res.status == 204) {
                        console.log('Delete Successful');
                    }
                })
                .catch(err => {
                    console.log(err);
                })
        }


        renderAllCommands();

    </script>
</body>
</html>